from domojupyter.ai.models.ModelTrainingInformation import ModelTrainingInformation
from domojupyter.ai.models.ModelTask import ModelTask
from domojupyter.ai.models.JupyterModelContext import JupyterModelContext


class CreateModelRequest:

    def __init__(self, name: str,
                 jupyter_model_context: JupyterModelContext,
                 description: str = None,
                 tasks: [ModelTask] = None,
                 training: ModelTrainingInformation = None):
        self.name = name
        self.description = description
        self.tasks = tasks
        self.training = training
        self.jupyterModelContext = jupyter_model_context
        self.modelType = "JUPYTER"

    def to_json(self):
        return {
            "name": self.name,
            "description": self.description,
            "tasks": [task.to_json() for task in self.tasks] if self.tasks is not None else None,
            "training": self.training.to_json() if self.training is not None else None,
            "jupyterModelContext": self.jupyterModelContext.to_json(),
            "type": self.modelType
        }
