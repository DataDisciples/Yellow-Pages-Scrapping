from domojupyter.ai.models.ChunkingConfiguration import ChunkingConfiguration
from domojupyter.ai.models.PromptTemplate import PromptTemplate
from domojupyter.ai.models.SizeBoundary import SizeBoundary
from domojupyter.ai.models.SummarizationOutputStyle import SummarizationOutputStyle


class TextSummarizationRequest:
    def __init__(self, input_str: str,
                 prompt_template: PromptTemplate,
                 parameters: dict[str, str],
                 model: str,
                 model_configuration: dict[str, object],
                 system: str,
                 chunking_configuration: ChunkingConfiguration,
                 output_style: SummarizationOutputStyle,
                 output_word_length: SizeBoundary):
        self.input_str = input_str
        self.promptTemplate = prompt_template
        self.parameters = parameters
        self.model = model
        self.modelConfiguration = model_configuration
        self.system = system
        self.chunkingConfiguration = chunking_configuration
        self.outputStyle = output_style
        self.outputWordLength = output_word_length

    def to_json(self):
        return {
            "input": self.input_str,
            "promptTemplate": self.promptTemplate.to_json() if self.promptTemplate is not None else None,
            "parameters": self.parameters,
            "model": self.model,
            "modelConfiguration": self.modelConfiguration,
            "system": self.system,
            "chunkingConfiguration": self.chunkingConfiguration.to_json()
            if self.chunkingConfiguration is not None else None,
            "outputStyle": self.outputStyle.value[0] if type(
                self.outputStyle) is SummarizationOutputStyle else self.outputStyle,
            "outputWordLength": self.outputWordLength.to_json() if self.outputWordLength is not None else None
        }
