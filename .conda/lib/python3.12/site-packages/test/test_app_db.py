import json

from . import config

import uuid
import pytest
import domojupyter.app_db as app_db

collection = 'f6135fe1-589f-4aac-81fa-e209ee7cd679'
document_id = 'f7fd9f13-6e54-4d73-b496-b4f93c315898'
document_query = {
    "collectionId": collection,
    # "jsonQuery": {"id": "f7fd9f13-6e54-4d73-b496-b4f93c315898"}
    "jsonQuery": {"content.Name": {"$regex": "Pikachu"}}
}
document_ids = ['2717c0e5-d2c3-46a3-acf4-134a91f4382a', '05d5a4f1-11ec-465a-b09a-a140c3606ed0']
new_document_id = uuid.uuid4().__str__()
document_definition = {
    "id": None,
    "content": {
        "Name": "Pikachu",
        "Type": "electric",
        "Speed": "75",
        "Attack": "55"
    }
}

document_definitions = [
    {
        "id": None,
        "content": {
            "Name": "Charmander",
            "Type": "fire",
            "Speed": "55",
            "Attack": "65"
        }

    },
    {
        "id": None,
        "content": {
            "Name": "Squirtle",
            "Type": "Water",
            "Speed": "50",
            "Attack": "60"
        }
    }
]

document_definitions_update = [
    {
        "id": '2c3469b5-56f7-4db4-af82-d148cdfc53a3',
        "content": {
            "Name": "Charmeleon",
            "Type": "fire",
            "Speed": "65",
            "Attack": "75"
        }

    },
    {
        "id": 'f312fda3-c47f-4100-8b71-bc9ef64d8698',
        "content": {
            "Name": "Wartortle",
            "Type": "Water",
            "Speed": "60",
            "Attack": "70"
        }
    }
]

document_update = {
    "query": {"id": "2c3469b5-56f7-4db4-af82-d148cdfc53a3"},
    "operation": {"$set": {"content.Name": "Charmeleons", "content.Speed": "650", "content.Attack": "750"}}
}


@pytest.mark.integration
def test_get_document():
    print('test_get_document')
    document = app_db.get_document(collection, document_id)
    assert document is not None


def test_get_documents():
    print('test_get_documents')
    documents = app_db.get_documents(collection, 0, 50)
    assert documents is not None


def test_query_documents():
    print('test_query_documents')
    documents = app_db.query_documents(collection, document_query)
    assert documents is not None


def test_create_document():
    print('test_create_document')
    app_db.create_document(collection, document_definition)


def test_create_documents():
    print('test_create_documents')
    app_db.create_documents(collection, document_definitions)


def test_delete_document():
    print('test_delete_document')
    app_db.delete_document(collection, '952e8749-2988-4b34-83c9-e85458cefade')


def test_delete_documents():
    print('test_delete_documents')
    app_db.delete_documents(collection, document_ids)


def test_update_document():
    print('test_update_document')
    app_db.update_document(collection, document_update)


def test_update_documents():
    print('test_update_documents')
    app_db.update_documents(collection, document_definitions_update)
